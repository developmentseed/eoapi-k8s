# default values for eoapi

comment: >
  some postgres variables are secrets that should be passed in via os environment variables.
  for example, to pass username or password information during `helm template` or `helm install` do:

  $ export GITSHA=$(git rev-parse HEAD | cut -c1-10)
  $ export PGUSER=s00pers3cr3t
  $ export POSTGRES_USER=s00pers3cr3t
  $ export POSTGRES_PASSWORD=superuserfoobar
  $ export PGPASSWORD=foobar

  $ helm install \
      --namespace eoapi \
      --create-namespace \
      --set gitSha=$GITSHA \
      --set db.settings.secrets.PGUSER=$PGUSER \
      --set db.settings.secrets.POSTGRES_USER=$POSTGRES_USER \
      --set db.settings.secrets.PGPASSWORD=$PGPASSWORD \
      --set db.settings.secrets.POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
      eoapi \
      ./eoapi

  $ helm template . \
      -s template/db/.yaml
      -f values.yaml \
      --set gitSha=$GITSHA \
      --set db.settings.secrets.PGUSER=$PGUSER \
      --set db.settings.secrets.POSTGRES_USER=$POSTGRES_USER \
      --set db.settings.secrets.PGPASSWORD=$PGPASSWORD \
      --set db.settings.secrets.POSTGRES_PASSWORD=$POSTGRES_PASSWORD \


db:
  environment: "k8s"
  enabled: true
  image:
    name: ghcr.io/stac-utils/pgstac
    tag: v0.7.1
  command:
      - "postgres"
      - "-N"
      - "500"
  # toggle to true||false if you want the db test fixtures loaded
  enable_data_fixtures: true
  settings:
    resources:
      requests:
        storage: "100Mi"
        cpu: "512m"
        memory: "1024Mi"
      limits:
        cpu: "512m"
        memory: "1024Mi"
    secrets:
      POSTGRES_DB: "postgis"
      POSTGRES_USER: ""
      POSTGRES_PASSWORD: ""
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "pgstac"
      POSTGRES_HOST_READER: "pgstac"
      POSTGRES_HOST_WRITER: "pgstac"
      DB_MIN_CONN_SIZE: "1"
      DB_MAX_CONN_SIZE: "15"
      # default connect: https://www.postgresql.org/docs/current/libpq-envars.html
      PGDATA: "/var/lib/postgresql/data/pgdata"
      PGUSER: ""
      PGPASSWORD: ""
      PGDATABASE: "postgis"

# only used in CI for running parallel helm installs
testing: false

# deprecated: helm templates are only sniffing for "minikube" as of now
providerContext: "ignore"

# the chart on the gh-pages branch will provide the correct updated value otherwise it's defaulted
gitSha: "gitshaABC123"

service:
  port: 8080

ingress:
  # `ingress.className`: "alb" || "gce" || "nginx"
  # `"alb || gce"` will create a `kind:Service` with `spec.port:'NodePort'` and ALBs for each service
  # `"nginx"` will create a `kind:Service` with a `spec.port:ClusterIP` and a single NLB and path rewrites for /vector, /stac, /raster
  enabled: true
  className: "alb"

vector:
  enabled: true
  image:
    name: ghcr.io/developmentseed/tipg
    tag: uvicorn-0.2.0
  settings:
    timeout: 10
    # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    resources:
      limits:
        cpu: "512m"
        memory: "1024Mi"
      requests:
        cpu: "256m"
        memory: "1024Mi"
    envVars:
      ##############
      # tipg
      ##############
      TIPG_CATALOG_TTL: "0"
      ##############
      # uvicorn
      ##############
      HOST: "0.0.0.0"
      PORT: "8080"
      # https://www.uvicorn.org/settings/#production
      WEB_CONCURRENCY: "10"

vector2:
  enabled: true
  image:
    name: ghcr.io/developmentseed/tipg
    tag: uvicorn-0.2.0
  command:
    - "uvicorn"
    - "tipg.main:app"
    - "--host=$(HOST)"
    - "--port=$(PORT)"
  settings:
    timeout: 10
    # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    resources:
      limits:
        cpu: "512m"
        memory: "1024Mi"
      requests:
        cpu: "256m"
        memory: "256Mi"
    envVars:
      ##############
      # tipg
      ##############
      TIPG_CATALOG_TTL: "0"
      ##############
      # uvicorn
      ##############
      HOST: "0.0.0.0"
      PORT: "8080"
      # https://www.uvicorn.org/settings/#production
      WEB_CONCURRENCY: "10"
docServer:
  enabled: true



