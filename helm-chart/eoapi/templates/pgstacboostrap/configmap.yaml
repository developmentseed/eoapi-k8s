{{- if .Values.pgstacBootstrap.enabled }}
---
# These ConfigMaps provide the necessary data and scripts for the pgstacbootstrap job.
# They use Helm hooks with a weight of "-6" (lower than the job's "-5") to ensure
# they are created before the job that depends on them.
apiVersion: v1
kind: ConfigMap
metadata:
  name: initdb-sql-config-{{ $.Release.Name }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
data:
  initdb.sql: |
    {{- range $path, $bytes := $.Files.Glob "initdb-data/*.sql"  -}}
    {{ $.Files.Get $path | nindent 4 }}
    {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: initdb-json-config-{{ $.Release.Name }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
data:
  {{- range $path, $bytes := $.Files.Glob "initdb-data/*.json"  -}}
  {{- base $path | nindent 2 -}}: | {{- $.Files.Get $path | nindent 4 -}}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgstac-setup-config-{{ $.Release.Name }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
data:
  pgstac-migrate.py: |
    {{- range $path, $bytes := $.Files.Glob "initdb-data/*.py"  -}}
    {{- $.Files.Get $path | nindent 4 -}}
    {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: initdb-sh-config-{{ $.Release.Name }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
data:
  run-forever.sh: |
    #!/bin/bash
    pypgstac pgready --dsn $PGADMIN_URI
    while true; do sleep 86400; done
  apt-and-pip-install.sh: |
    #!/bin/bash
    apt update -y && apt install python3 python3-pip -y
    pip install pypgstac[psycopg]
  run-migrate-and-load.sh: |
    #!/bin/bash
    bash /opt/initdb/apt-and-pip-install.sh
    # make sure crunchydata postgresql operator has seeded our secrets and we're ready to go
    pypgstac pgready --dsn $PGADMIN_URI
    # run migrations
    python3 /opt/initdb/python-scripts/pgstac-migrate.py

    if [ "$LOAD_FIXTURES" = "true" ]; then
        pypgstac load collections /opt/initdb/json-data/noaa-emergency-response.json --dsn $PGADMIN_URI --method insert_ignore
        pypgstac load items /opt/initdb/json-data/noaa-eri-nashville2020.json --dsn $PGADMIN_URI --method insert_ignore
        psql $PGADMIN_URI -f /opt/initdb/sql-data/initdb.sql
        echo "DONE LOADING!!!!!!"
    fi

    if [ "$KEEP_ALIVE" = "true" ]; then
        bash /opt/initdb/run-forever.sh
    fi

    # let the k8's pod know we've completed successfully
    exit 0
{{- end }}
