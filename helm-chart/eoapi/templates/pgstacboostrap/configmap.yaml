{{- if .Values.pgstacBootstrap.enabled }}
---
# These ConfigMaps provide the necessary data and scripts for the pgstacbootstrap job.
# They use Helm hooks with a weight of "-6" (lower than the job's "-5") to ensure
# they are created before the job that depends on them.
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgstac-settings-config-{{ $.Release.Name }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
data:
  pgstac-settings.sql: |
    {{ $.Files.Get "initdb-data/settings/pgstac-settings.sql" | nindent 4 }}
---
{{- if or .Values.pgstacBootstrap.settings.loadSamples (eq .Values.pgstacBootstrap.settings.envVars.LOAD_FIXTURES "true") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: initdb-sql-config-{{ $.Release.Name }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
data:
  initdb.sql: |
    {{- range $path, $bytes := $.Files.Glob "initdb-data/samples/*.sql"  -}}
    {{ $.Files.Get $path | nindent 4 }}
    {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: initdb-json-config-{{ $.Release.Name }}
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
data:
  {{- range $path, $bytes := $.Files.Glob "initdb-data/samples/*.json"  -}}
  {{- base $path | nindent 2 -}}: | {{- $.Files.Get $path | nindent 4 -}}
  {{- end }}
{{- end }}
{{- end }}
---
{{- if .Values.postgrescluster.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: initdb
  annotations:
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
data:
  initdb.sql: |
    \c eoapi
    CREATE EXTENSION IF NOT EXISTS postgis;
    CREATE EXTENSION IF NOT EXISTS btree_gist;
    CREATE EXTENSION IF NOT EXISTS unaccent;
    CREATE ROLE pgstac_admin;
    CREATE ROLE pgstac_read;
    CREATE ROLE pgstac_ingest;
    ALTER DATABASE eoapi OWNER TO eoapi;
    ALTER USER eoapi SET search_path TO pgstac, public;
    ALTER DATABASE eoapi set search_path to pgstac, public;
    GRANT CONNECT ON DATABASE eoapi TO eoapi;
    GRANT ALL PRIVILEGES ON TABLES TO eoapi;
    GRANT ALL PRIVILEGES ON SEQUENCES TO eoapi;
    GRANT pgstac_read TO eoapi WITH ADMIN OPTION;
    GRANT pgstac_ingest TO eoapi WITH ADMIN OPTION;
    GRANT pgstac_admin TO eoapi WITH ADMIN OPTION;
{{- end }}