{{- if .Values.ingress.enabled }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: eoapi-ingress-{{ .Release.Name }}
  labels:
    app: eoapi-{{ .Release.Name }}
  annotations:
    {{- if eq .Values.ingress.className "nginx" }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    {{- end }}
    {{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
    {{- end }}
    # Temporary annotations for Traefik until uvicorn support real prefix in ASGI: https://github.com/encode/uvicorn/discussions/2490
    {{- if eq .Values.ingress.className "traefik" }}
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: {{ $.Release.Namespace }}-strip-prefix-middleware-{{ $.Release.Name }}@kubernetescrd
    {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  rules:
    - {{- if .Values.ingress.host }}
      host: {{ .Values.ingress.host }}
      {{- end }}
      http:
        paths:
          {{- if and .Values.raster.enabled (or (not (hasKey .Values.raster "ingress")) .Values.raster.ingress.enabled) }}
          - pathType: {{ if eq .Values.ingress.className "nginx" }}ImplementationSpecific{{ else }}Prefix{{ end }}
            path: /raster{{ if eq .Values.ingress.className "nginx" }}(/|$)(.*){{ end }}
            backend:
              service:
                name: raster-{{ $.Release.Name }}
                port:
                  number: {{ .Values.service.port }}
          {{- end }}
          
          {{- if and .Values.stac.enabled (or (not (hasKey .Values.stac "ingress")) .Values.stac.ingress.enabled) }}
          - pathType: {{ if eq .Values.ingress.className "nginx" }}ImplementationSpecific{{ else }}Prefix{{ end }}
            path: /stac{{ if eq .Values.ingress.className "nginx" }}(/|$)(.*){{ end }}
            backend:
              service:
                name: stac-{{ $.Release.Name }}
                port:
                  number: {{ .Values.service.port }}
          {{- end }}
          
          {{- if and .Values.vector.enabled (or (not (hasKey .Values.vector "ingress")) .Values.vector.ingress.enabled) }}
          - pathType: {{ if eq .Values.ingress.className "nginx" }}ImplementationSpecific{{ else }}Prefix{{ end }}
            path: /vector{{ if eq .Values.ingress.className "nginx" }}(/|$)(.*){{ end }}
            backend:
              service:
                name: vector-{{ $.Release.Name }}
                port:
                  number: {{ .Values.service.port }}
          {{- end }}
          
          {{- if and .Values.multidim.enabled (or (not (hasKey .Values.multidim "ingress")) .Values.multidim.ingress.enabled) }}
          - pathType: {{ if eq .Values.ingress.className "nginx" }}ImplementationSpecific{{ else }}Prefix{{ end }}
            path: /multidim{{ if eq .Values.ingress.className "nginx" }}(/|$)(.*){{ end }}
            backend:
              service:
                name: multidim-{{ $.Release.Name }}
                port:
                  number: {{ .Values.service.port }}
          {{- end }}
          
          {{- if .Values.docServer.enabled }}
          - pathType: Prefix
            path: "/{{ $.Values.ingress.rootPath | default "" }}"
            backend:
              service:
                name: doc-server-{{ $.Release.Name }}
                port:
                  number: 80
          {{- end }}
  {{- if and .Values.ingress.host .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
{{- end }}
