{{- if .Values.stac.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: stac-{{ .Release.Name }}
    gitsha: {{ .Values.gitSha }}
  name: stac-{{ .Release.Name }}
  {{- if .Values.stac.annotations }}
  annotations:
    {{- with .Values.stac.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: stac-{{ .Release.Name }}
  template:
    metadata:
      labels:
        app: stac-{{ .Release.Name }}
        {{- with .Values.stac.settings.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "eoapi.pgstacInitContainers" . | nindent 6 }}
      containers:
      - image: {{ .Values.stac.image.name }}:{{ .Values.stac.image.tag }}
        name: stac
        command:
          {{- toYaml .Values.stac.command | nindent 10 }}
          {{- if (and (.Values.ingress.className) (or (eq .Values.ingress.className "nginx") (eq .Values.ingress.className "traefik"))) }}
          - "--proxy-headers"
          - "--forwarded-allow-ips=*"
          - "--root-path={{ .Values.stac.ingress.path }}"
          {{- end }}{{/* needed for proxies and path rewrites on NLB */}}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.port }}
          failureThreshold: 3
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /_mgmt/ping
            port: {{ .Values.service.port }}
          failureThreshold: 3
          periodSeconds: 15
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /_mgmt/ping
            port: {{ .Values.service.port }}
          # check every sec for 1 minute
          periodSeconds: 1
          failureThreshold: 60
          successThreshold: 1
        ports:
          - containerPort: {{ .Values.service.port }}
        resources:
          {{- toYaml .Values.stac.settings.resources | nindent 10 }}
        env:
          {{- include "eoapi.postgresqlEnv" . | nindent 10 }}
          {{- include "eoapi.commonEnvVars" (dict "service" "stac" "root" .) | nindent 10 }}
        envFrom:
          - configMapRef:
              name: stac-envvar-configmap-{{ .Release.Name }}
          {{- if .Values.stac.settings.extraEnvFrom }}
          {{- toYaml .Values.stac.settings.extraEnvFrom | nindent 10 }}
          {{- end }}
        {{- include "eoapi.mountServiceSecrets" (dict "service" "stac" "root" .) | nindent 10 }}
        {{- with .Values.stac.settings.extraVolumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
        {{- with .Values.stac.settings.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      serviceAccountName: {{ include "eoapi.serviceAccountName" . }}
      {{- with .Values.stac.settings.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stac.settings.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
