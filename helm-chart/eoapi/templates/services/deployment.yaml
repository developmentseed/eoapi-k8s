{{ include "eoapi.validateTempDB" . }}
{{- range $serviceName, $v := .Values -}}
{{- if has $serviceName $.Values.apiServices }}
{{- if index $v "enabled" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ $serviceName }}-{{ $.Release.Name }}
    gitsha: {{ $.Values.gitSha }}
  name: {{ $serviceName }}-{{ $.Release.Name }}
  {{- with index $v "annotations" }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ $serviceName }}-{{ $.Release.Name }}
  template:
    metadata:
      labels:
        app: {{ $serviceName }}-{{ $.Release.Name }}
    spec:
      containers:
      - image: {{ index $v "image" "name" }}:{{ index $v "image" "tag" }}
        name: {{ $serviceName }}
        command:
          {{- toYaml (index $v "command") | nindent 10 }}
          {{- if (and ($.Values.ingress.className) (or (eq $.Values.ingress.className "nginx") (eq $.Values.ingress.className "traefik")) (not $.Values.testing)) }}
          - "--root-path=/{{ $serviceName }}"
          {{- else if (and ($.Values.ingress.className) (or (eq $.Values.ingress.className "nginx") (eq $.Values.ingress.className "traefik")) ($.Values.testing)) }}
          - "--root-path=/{{ $serviceName }}{{ $.Release.Name }}"
          {{- end }}{{/* needed for proxies and path rewrites on NLB */}}
        livenessProbe:
          tcpSocket:
            port: {{ $.Values.service.port }}
          failureThreshold: 3
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            {{- if (eq $serviceName "stac") }}
            path: /_mgmt/ping
            {{- else }}
            path: /healthz
            {{- end }}
            port: {{ $.Values.service.port }}
          failureThreshold: 3
          periodSeconds: 15
          successThreshold: 1
        startupProbe:
          httpGet:
            {{- if (eq $serviceName "stac") }}
            path: /_mgmt/ping
            {{- else }}
            path: /healthz
            {{- end }}
            port: {{ $.Values.service.port }}
          # check every sec for 1 minute
          periodSeconds: 1
          failureThreshold: 60
          successThreshold: 1
        ports:
          - containerPort: {{ $.Values.service.port }}
        resources:
          {{- toYaml (index $v "settings" "resources") | nindent 10 }}
        {{- if $.Values.postgrescluster.enabled }}
        env:
          {{- include "eoapi.pgstacSecrets" $ | nindent 12 }}
        {{- end }}
        envFrom:
          # NOTE: there's no reason we need to use a `ConfigMap` or `Secret` here to get os env vars into the pod.
          # we could just template them out here immediately with `value: $_` but this allows us
          # to store them in k8s intermediately and change them and then bounce deploys if needed
        - configMapRef:
            name: {{ $serviceName }}-envvar-configmap-{{ $.Release.Name }}
        {{- if $.Values.db.enabled }}
        - secretRef:
            name: pgstac-secrets-{{ $.Release.Name }}
        {{- end }}
        {{- if index $v "settings" "envSecrets" }}
        {{- range $secret := index $v "settings" "envSecrets" }}
        - secretRef:
            name: {{ $secret }}
        {{- end }}
        {{- end }}
      {{- with index $v "settings" "affinity" }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with index $v "settings" "tolerations" }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{/* END: if index $v "enabled" */}}
{{- end }}
{{/* END: if has $serviceName $.Values.apiServices */}}
{{- end }}
{{/* END: range $serviceName, $v := .Values*/}}
{{- end }}
