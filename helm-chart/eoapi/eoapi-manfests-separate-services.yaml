---
# Source: eoapi/templates/db/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: pgstac-secrets-vector1
type: "Opaque"
stringData:
  DB_MAX_CONN_SIZE: "10"
  DB_MIN_CONN_SIZE: "1"
  PGDATA: "/var/lib/postgresql/data/pgdata"
  PGDATABASE: "postgis"
  POSTGRES_DBNAME: "postgis"
  PGPASSWORD: "password"
  POSTGRES_PASS: "password"
  PGUSER: "username"
  POSTGRES_DB: "postgis"
  POSTGRES_HOST: "pgstac"
  POSTGRES_HOST_READER: "pgstac"
  POSTGRES_HOST_WRITER: "pgstac"
  POSTGRES_PASSWORD: "password"
  POSTGRES_PORT: "5432"
  POSTGRES_USER: "username"
  TIPG_DB_SCHEMAS: '["public","vector1"]'
  TIPG_DB_EXCLUDE_TABLE_SCHEMAS: '["vector2"]'
---
# Source: eoapi/templates/db/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: pgstac-secrets-vector2
type: "Opaque"
stringData:
  DB_MAX_CONN_SIZE: "10"
  DB_MIN_CONN_SIZE: "1"
  PGDATA: "/var/lib/postgresql/data/pgdata"
  PGDATABASE: "postgis"
  POSTGRES_DBNAME: "postgis"
  PGPASSWORD: "password"
  POSTGRES_PASS: "password"
  PGUSER: "username"
  POSTGRES_DB: "postgis"
  POSTGRES_HOST: "pgstac"
  POSTGRES_HOST_READER: "pgstac"
  POSTGRES_HOST_WRITER: "pgstac"
  POSTGRES_PASSWORD: "password"
  POSTGRES_PORT: "5432"
  POSTGRES_USER: "username"
  TIPG_DB_SCHEMAS: '["public","vector2"]'
  TIPG_DB_EXCLUDE_TABLE_SCHEMAS: '["vector1"]'
---
# Source: eoapi/templates/services/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vector11
    gitsha: c873b20edb
  name: vector11
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: vector11
  template:
    metadata:
      labels:
        app: vector11
    spec:
      containers:
      - image: ghcr.io/developmentseed/tipg:uvicorn-0.2.0
        name: vector
        command:
          - "uvicorn"
        
          - "tipg.main:app"
          - "--host=$(HOST)"
          - "--port=$(PORT)"
        ports:
          - containerPort: 8080
        resources:
          limits:
            cpu: 512m
            memory: 1024Mi
          requests:
            cpu: 256m
            memory: 256Mi
        envFrom:
          # NOTE: there's no reason we need to use a `ConfigMap` or `Secret` here to get os env vars into the pod.
          # we could just template them out here immediately with `value: $_` but this allows us
          # to store them in k8s intermediately and change them and then bounce deploys if needed
        - secretRef:
            name: pgstac-secrets-vector1
        - configMapRef:
            name: vector-envvar-configmap
---
# Source: eoapi/templates/services/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vector12
    gitsha: c873b20edb
  name: vector12
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: vector12
  template:
    metadata:
      labels:
        app: vector12
    spec:
      containers:
      - image: ghcr.io/developmentseed/tipg:uvicorn-0.2.0
        name: vector2
        command:
          - "uvicorn"
          - "tipg.main:app"
          - "--host=$(HOST)"
          - "--port=$(PORT)"
        ports:
          - containerPort: 8080
        resources:
          limits:
            cpu: 512m
            memory: 1024Mi
          requests:
            cpu: 256m
            memory: 256Mi
        envFrom:
          # NOTE: there's no reason we need to use a `ConfigMap` or `Secret` here to get os env vars into the pod.
          # we could just template them out here immediately with `value: $_` but this allows us
          # to store them in k8s intermediately and change them and then bounce deploys if needed
        - secretRef:
            name: pgstac-secrets-vector2
        - configMapRef:
            name: vector-envvar-configmap
---
# Source: eoapi/templates/services/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vector11
  name: vector11
spec:
  type: "NodePort"
  ports:
  - name: '8080'
    port: 8080
    targetPort: 8080
  selector:
    app: vector11
---
# Source: eoapi/templates/services/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vector12
  name: vector12
spec:
  type: "NodePort"
  ports:
  - name: '8080'
    port: 8080
    targetPort: 8080
  selector:
    app: vector12
---
# Source: eoapi/templates/services/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-envvar-configmap
data:
  HOST: "0.0.0.0"
  PORT: "8080"
  TIPG_CATALOG_TTL: "0"
  WEB_CONCURRENCY: "10"
