suite: unified ingress tests
templates:
  - templates/services/ingress.yaml
tests:
  - it: "vector ingress with nginx controller"
    set:
      ingress.className: "nginx"
      ingress.annotations:
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/enable-access-log: "true"
      raster.enabled: false
      stac.enabled: false
      vector.enabled: true
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/vector(/|$)(.*)"
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "ImplementationSpecific"
      - equal:
          path: metadata.annotations
          value:
            nginx.ingress.kubernetes.io/enable-access-log: "true"
            nginx.ingress.kubernetes.io/use-regex: "true"
            nginx.ingress.kubernetes.io/rewrite-target: /$2
            nginx.ingress.kubernetes.io/enable-cors: "true"
      - equal:
          path: spec.ingressClassName
          value: "nginx"

  - it: "stac ingress with traefik controller"
    set:
      ingress.className: "traefik"
      ingress.pathType: "Prefix"
      ingress.host: "eoapi.local"
      testing: true
      raster.enabled: false
      stac.enabled: true
      vector.enabled: false
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/stac"
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "Prefix"
      - equal:
          path: metadata.annotations
          value:
            traefik.ingress.kubernetes.io/router.entrypoints: web
            traefik.ingress.kubernetes.io/router.middlewares: NAMESPACE-RELEASE-NAME-strip-prefix-middleware@kubernetescrd
      - equal:
          path: spec.ingressClassName
          value: "traefik"
      - equal:
          path: spec.rules[0].host
          value: "eoapi.local"

  - it: "multidim ingress in production (non-testing) with traefik controller"
    set:
      ingress.className: "traefik"
      ingress.pathType: "Prefix"
      ingress.host: "eoapi.local"
      testing: false
      raster.enabled: false
      stac.enabled: false
      vector.enabled: false
      multidim.enabled: true
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/multidim"
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "Prefix"
      - equal:
          path: spec.rules[0].http.paths[1].path
          value: "/"
      - equal:
          path: spec.rules[0].http.paths[1].backend.service.name
          value: RELEASE-NAME-doc-server

  - it: "custom paths for multiple services with nginx controller"
    set:
      ingress.className: "nginx"
      raster.enabled: true
      raster.ingress.path: "/titiler"
      stac.enabled: true
      stac.ingress.path: "/api"
      vector.enabled: true
      vector.ingress.path: "/features"
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/titiler(/|$)(.*)"
      - equal:
          path: spec.rules[0].http.paths[1].path
          value: "/api(/|$)(.*)"
      - equal:
          path: spec.rules[0].http.paths[2].path
          value: "/features(/|$)(.*)"
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "ImplementationSpecific"
      - equal:
          path: spec.rules[0].http.paths[1].pathType
          value: "ImplementationSpecific"
      - equal:
          path: spec.rules[0].http.paths[2].pathType
          value: "ImplementationSpecific"
      - equal:
          path: metadata.annotations
          value:
            nginx.ingress.kubernetes.io/use-regex: "true"
            nginx.ingress.kubernetes.io/rewrite-target: /$2

  - it: "custom paths with traefik controller"
    set:
      ingress.className: "traefik"
      raster.enabled: false
      stac.enabled: true
      stac.ingress.path: "/api"
      vector.enabled: false
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/api"
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "Prefix"
      - equal:
          path: metadata.annotations
          value:
            traefik.ingress.kubernetes.io/router.entrypoints: web
            traefik.ingress.kubernetes.io/router.middlewares: NAMESPACE-RELEASE-NAME-strip-prefix-middleware@kubernetescrd

  - it: "multiple hosts with nginx controller"
    set:
      ingress.className: "nginx"
      ingress.hosts:
        - "2.eoapi.dev"
        - "1.eoapi.dev"
      raster.enabled: true
      stac.enabled: true
      vector.enabled: false
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].host
          value: "2.eoapi.dev"
      - equal:
          path: spec.rules[1].host
          value: "1.eoapi.dev"
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/raster(/|$)(.*)"
      - equal:
          path: spec.rules[0].http.paths[1].path
          value: "/stac(/|$)(.*)"
      - equal:
          path: spec.rules[1].http.paths[0].path
          value: "/raster(/|$)(.*)"
      - equal:
          path: spec.rules[1].http.paths[1].path
          value: "/stac(/|$)(.*)"

  - it: "multiple hosts with traefik controller"
    set:
      ingress.className: "traefik"
      ingress.hosts:
        - "2.eoapi.dev"
        - "1.eoapi.dev"
      raster.enabled: false
      stac.enabled: true
      vector.enabled: false
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].host
          value: "2.eoapi.dev"
      - equal:
          path: spec.rules[1].host
          value: "1.eoapi.dev"
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/stac"
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "Prefix"
      - equal:
          path: spec.rules[1].http.paths[0].path
          value: "/stac"
      - equal:
          path: spec.rules[1].http.paths[0].pathType
          value: "Prefix"

  - it: "multiple hosts with TLS enabled"
    set:
      ingress.className: "nginx"
      ingress.hosts:
        - "2.eoapi.dev"
        - "1.eoapi.dev"
      ingress.tls.enabled: true
      ingress.tls.secretName: "eoapi-tls"
      raster.enabled: false
      stac.enabled: true
      vector.enabled: false
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.tls[0].hosts[0]
          value: "2.eoapi.dev"
      - equal:
          path: spec.tls[0].hosts[1]
          value: "1.eoapi.dev"
      - equal:
          path: spec.tls[0].secretName
          value: "eoapi-tls"

  - it: "single host (default)"
    set:
      ingress.className: "nginx"
      ingress.host: "1.eoapi.dev"
      ingress.tls.enabled: true
      ingress.tls.secretName: "eoapi-tls"
      raster.enabled: false
      stac.enabled: true
      vector.enabled: false
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].host
          value: "1.eoapi.dev"
      - equal:
          path: spec.tls[0].hosts[0]
          value: "1.eoapi.dev"
      - equal:
          path: spec.tls[0].secretName
          value: "eoapi-tls"

  - it: "hosts array takes precedence over single host"
    set:
      ingress.className: "nginx"
      ingress.host: "should-be-ignored.com"
      ingress.hosts:
        - "1.eoapi.dev"
      raster.enabled: false
      stac.enabled: true
      vector.enabled: false
      multidim.enabled: false
      browser.enabled: false
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].host
          value: "1.eoapi.dev"
      - notEqual:
          path: spec.rules[0].host
          value: "should-be-ignored.com"
